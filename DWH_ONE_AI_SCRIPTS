#DWH_CDM_SOURCE#

import snowflake.connector
conn = snowflake.connector.connect(
    user='DF_RWD_DEV_PRJ_MDC_IICS_DEVELOPER',
    password='fo6AKi45VLq8kxxjyruKYq0',
    account='fg67397.eu-west-1',
    warehouse='DF_RWD_DEV_WH_PRJ_MDC',
    database='DF_RWD_DEV',
    schema='PRJ_MDC_DWH'
)


cur = conn.cursor()

delete_sql = """
DELETE FROM DWH_CDM_SOURCE
"""


cur.execute(delete_sql)

insert_sql = """
INSERT INTO "DF_RWD_DEV"."PRJ_MDC_DWH"."DWH_CDM_SOURCE"
(
CDM_SOURCE_NAME,
CDM_SOURCE_ABBREVIATION,
CDM_HOLDER,
SOURCE_DESCRIPTION,
SOURCE_DOCUMENTATION_REFERENCE,
CDM_ETL_REFERENCE,
SOURCE_RELEASE_DATE,
CDM_RELEASE_DATE,
CDM_VERSION

)


(SELECT * FROM "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."CDM_SOURCE"

UNION ALL

SELECT * FROM "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."CDM_SOURCE"

UNION ALL 

SELECT * FROM DF_RWD_DEV.RWD_MDC_SA_STD_PSA.CDM_SOURCE)"""

cur.execute(insert_sql)


conn.commit()


cur.close()
conn.close()




#DWH_PATIENT_MASTER#

import snowflake.connector
conn = snowflake.connector.connect(
    user='DF_RWD_DEV_PRJ_MDC_IICS_DEVELOPER',
    password='fo6AKi45VLq8kxxjyruKYq0',
    account='fg67397.eu-west-1',
    warehouse='DF_RWD_DEV_WH_PRJ_MDC',
    database='DF_RWD_DEV',
    schema='PRJ_MDC_DWH'
)


cur = conn.cursor()

delete_sql = """
DELETE FROM DWH_PATIENT_MASTER
"""


cur.execute(delete_sql)

insert_sql = """INSERT INTO "DF_RWD_DEV"."PRJ_MDC_DWH"."DWH_PATIENT_MASTER"

(


PERSON_ID,
CLINIC_ID,
GENDER,
BIRTHYEAR,
AGE,	
AGE_GROUP,	
HEIGHT,	
WEIGHT,	
ETHNICITY,
COUNTRY,
CREATED_DATE,	
MODIFIED_DATE,	
INSULINEXPERIENCE,	
LASTLOGIN,
CONSENT,
STATUS,
SOURCE




)


(SELECT 
    P.PERSON_ID AS PERSON_ID,
    P.CLINIC_ID AS CLINIC_ID,
    INITCAP(P.GENDER) AS GENDER,
    P.BIRTHDATE AS BIRTHYEAR,
        SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) AS AGE,
    CASE 
        WHEN P.BIRTHDATE IS NULL THEN 'UNKNOWN'
        WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 0 AND 17 THEN '0-17' 
	WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 18 AND 30 THEN '18-30' 
        WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 31 AND 45 THEN '31-45'
	WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 46 AND 65 THEN '46-65'
        ELSE '65+'
    END AS AGE_GROUP, 
    P.HEIGHT_IN_FEET AS HEIGHT,
    P.WEIGHT_IN_POUNDS AS WEIGHT,
    P.ETHNICITY AS ETHNICITY,
    INITCAP(P.COUNTRY) AS COUNTRY,
    P.CREATED_DATE AS CREATED_DATE,
    P.MODIFIED_DATE AS MODIFIED_DATE,
    MAX(CASE WHEN PD.PERSON_DETAIL_LABEL = 'INSULIN_EXPERIENCE' THEN INITCAP(REPLACE(PD.PERSON_DETAIL_VALUE, '_', ' ')) ELSE NULL END) AS INSULIN_EXPERIENCE,
    MAX(CASE WHEN PD.PERSON_DETAIL_LABEL = 'LAST_LOGIN' THEN PD.PERSON_DETAIL_VALUE ELSE NULL END) AS LAST_LOGIN,
    U.CONSENT AS CONSENT,
    P.STATUS AS STATUS,
    P.SOURCE AS SOURCE
FROM "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."PERSON" P 
INNER JOIN "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."PERSON_DETAIL" PD 
ON P.PERSON_ID = PD.PERSON_ID
LEFT JOIN "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."USAGE_CONSENT" U ON P.PERSON_ID=U.PERSON_ID WHERE P.SOURCE LIKE '%_PATIENT'
GROUP BY 
    P.PERSON_ID,
    P.CLINIC_ID,
    P.GENDER,
    P.BIRTHDATE,
    P.HEIGHT_IN_FEET,
    P.WEIGHT_IN_POUNDS,
    P.ETHNICITY,
    P.COUNTRY,
    P.CREATED_DATE,
    P.MODIFIED_DATE,
    U.CONSENT,
    P.STATUS,
    P.SOURCE


UNION ALL

SELECT 
    P.PERSON_ID AS PERSON_ID,
    P.CLINIC_ID AS CLINIC_ID,
    INITCAP(P.GENDER) AS GENDER,
    P.BIRTHDATE AS BIRTHYEAR,
        SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) AS AGE,
    CASE 
        WHEN P.BIRTHDATE IS NULL THEN 'UNKNOWN'
        WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 0 AND 17 THEN '0-17' 
	WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 18 AND 30 THEN '18-30' 
        WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 31 AND 45 THEN '31-45'
	WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 46 AND 65 THEN '46-65'
        ELSE '65+'
    END AS AGE_GROUP, 
    P.HEIGHT_IN_FEET AS HEIGHT,
    P.WEIGHT_IN_POUNDS AS WEIGHT,
    P.ETHNICITY AS ETHNICITY,
    INITCAP(P.COUNTRY) AS COUNTRY,
    P.CREATED_DATE AS CREATED_DATE,
    P.MODIFIED_DATE AS MODIFIED_DATE,
    MAX(CASE WHEN PD.PERSON_DETAIL_LABEL = 'INSULIN_EXPERIENCE' THEN INITCAP(REPLACE(PD.PERSON_DETAIL_VALUE, '_', ' ')) ELSE NULL END) AS INSULIN_EXPERIENCE,
    MAX(CASE WHEN PD.PERSON_DETAIL_LABEL = 'LAST_LOGIN' THEN PD.PERSON_DETAIL_VALUE ELSE NULL END) AS LAST_LOGIN,
    U.CONSENT AS CONSENT,
    P.STATUS AS STATUS,
    P.SOURCE AS SOURCE
FROM "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."PERSON" P 
INNER JOIN "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."PERSON_DETAIL" PD 
ON P.PERSON_ID = PD.PERSON_ID
LEFT JOIN "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."USAGE_CONSENT" U ON P.PERSON_ID=U.PERSON_ID WHERE P.SOURCE LIKE '%_PATIENT'
GROUP BY 
    P.PERSON_ID,
    P.CLINIC_ID,
    P.GENDER,
    P.BIRTHDATE,
    P.HEIGHT_IN_FEET,
    P.WEIGHT_IN_POUNDS,
    P.ETHNICITY,
    P.COUNTRY,
    P.CREATED_DATE,
    P.MODIFIED_DATE,
    U.CONSENT,
    P.STATUS,
    P.SOURCE
	
	
UNION ALL

SELECT 
    P.PERSON_ID AS PERSON_ID,
    P.CLINIC_ID AS CLINIC_ID,
    INITCAP(P.GENDER) AS GENDER,
    P.BIRTHDATE AS BIRTHYEAR,
        SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) AS AGE,
    CASE 
        WHEN P.BIRTHDATE IS NULL THEN 'UNKNOWN'
        WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 0 AND 17 THEN '0-17' 
	WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 18 AND 30 THEN '18-30' 
        WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 31 AND 45 THEN '31-45'
	WHEN SUBSTRING(TO_VARCHAR(CURRENT_DATE), 1, 4) - SUBSTRING(P.BIRTHDATE, 1, 4) BETWEEN 46 AND 65 THEN '46-65'
        ELSE '65+'
    END AS AGE_GROUP, 
    P.HEIGHT_IN_FEET AS HEIGHT,
    P.WEIGHT_IN_POUNDS AS WEIGHT,
    P.ETHNICITY AS ETHNICITY,
    INITCAP(P.COUNTRY) AS COUNTRY,
    P.CREATED_DATE AS CREATED_DATE,
    P.MODIFIED_DATE AS MODIFIED_DATE,
    MAX(CASE WHEN PD.PERSON_DETAIL_LABEL = 'INSULIN_EXPERIENCE' THEN INITCAP(REPLACE(PD.PERSON_DETAIL_VALUE, '_', ' ')) ELSE NULL END) AS INSULIN_EXPERIENCE,
    MAX(CASE WHEN PD.PERSON_DETAIL_LABEL = 'LAST_LOGIN' THEN PD.PERSON_DETAIL_VALUE ELSE NULL END) AS LAST_LOGIN,
    U.CONSENT AS CONSENT,
    P.STATUS AS STATUS,
    P.SOURCE AS SOURCE
FROM "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."PERSON" P 
INNER JOIN "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."PERSON_DETAIL" PD 
ON P.PERSON_ID = PD.PERSON_ID
LEFT JOIN "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."USAGE_CONSENT" U ON P.PERSON_ID=U.PERSON_ID WHERE P.SOURCE LIKE '%_PATIENT'
GROUP BY 
    P.PERSON_ID,
    P.CLINIC_ID,
    P.GENDER,
    P.BIRTHDATE,
    P.HEIGHT_IN_FEET,
    P.WEIGHT_IN_POUNDS,
    P.ETHNICITY,
    P.COUNTRY,
    P.CREATED_DATE,
    P.MODIFIED_DATE,
    U.CONSENT,
    P.STATUS,
    P.SOURCE)"""
    
    
cur.execute(insert_sql)


conn.commit()


cur.close()
conn.close()




#CLINIC_MASTER#

import snowflake.connector
conn = snowflake.connector.connect(
    user='DF_RWD_DEV_PRJ_MDC_IICS_DEVELOPER',
    password='fo6AKi45VLq8kxxjyruKYq0',
    account='fg67397.eu-west-1',
    warehouse='DF_RWD_DEV_WH_PRJ_MDC',
    database='DF_RWD_DEV',
    schema='PRJ_MDC_DWH'
)


cur = conn.cursor()

delete_sql = """
DELETE FROM DWH_CLINIC_MASTER
"""


cur.execute(delete_sql)


insert_sql = """INSERT INTO "DF_RWD_DEV"."PRJ_MDC_DWH"."DWH_CLINIC_MASTER"
(

    CLINIC_ID,
	CITY,
	STATE,
	COUNTRY,
	ZIP_CODE, 
	STATUS, 
	CREATED_DATE,
	MODIFIED_DATE,
    REGION,
    CLINIC_CD,
    SOURCE

)


(SELECT 
	CLINIC_ID,
	INITCAP(CITY) AS CITY,
	INITCAP(STATE) AS STATE,
	INITCAP(COUNTRY) AS COUNTRY,
	ZIP_CODE, 
	STATUS, 
	CREATED_DATE,
	MODIFIED_DATE,
   INITCAP(COALESCE(STATE, '') || ' | ' || COALESCE(CITY, '')) AS REGION,
    CLINIC_ID|| ' | ' ||ZIP_CODE AS CLINIC_CD,
    SOURCE
FROM "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."CLINIC"

UNION ALL

SELECT 
	CLINIC_ID,
	INITCAP(CITY) AS CITY,
	INITCAP(STATE) AS STATE,
	INITCAP(COUNTRY) AS COUNTRY,
	ZIP_CODE, 
	STATUS, 
	CREATED_DATE,
	MODIFIED_DATE,
    INITCAP(COALESCE(STATE, '') || ' | ' || COALESCE(CITY, '')) AS REGION,
    CLINIC_ID|| ' | ' ||ZIP_CODE AS CLINIC_CD,
    SOURCE
FROM "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."CLINIC"

UNION ALL

SELECT 
	CLINIC_ID,
	INITCAP(CITY) AS CITY,
	INITCAP(STATE) AS STATE,
	INITCAP(COUNTRY) AS COUNTRY,
	ZIP_CODE, 
	STATUS, 
	CREATED_DATE,
	MODIFIED_DATE,
    INITCAP(COALESCE(STATE, '') || ' | ' || COALESCE(CITY, '')) AS REGION,
    CLINIC_ID|| ' | ' ||ZIP_CODE AS CLINIC_CD,
    SOURCE
FROM "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."CLINIC")"""

cur.execute(insert_sql)


conn.commit()


cur.close()
conn.close()




#DWH_USER_MASTER#

import snowflake.connector
conn = snowflake.connector.connect(
    user='DF_RWD_DEV_PRJ_MDC_IICS_DEVELOPER',
    password='fo6AKi45VLq8kxxjyruKYq0',
    account='fg67397.eu-west-1',
    warehouse='DF_RWD_DEV_WH_PRJ_MDC',
    database='DF_RWD_DEV',
    schema='PRJ_MDC_DWH'
)


cur = conn.cursor()

delete_sql = """
DELETE FROM DWH_USER_MASTER
"""


cur.execute(delete_sql)

insert_sql = """INSERT INTO "DF_RWD_DEV"."PRJ_MDC_DWH"."DWH_USER_MASTER"

(

	USER_ID,
	CLINIC_ID,
	COUNTRY,
	CREATED_DATE,
	MODIFIED_DATE,
	STATUS,
	SOURCE,
	TITLE,
	LANGUAGE,
	CATEGORY,
	ISCLINICADMIN,
	CANREADPII,
	CANMANAGEPII,
	CANREADCLINICAL,
	CANMANAGECLINICAL,
	LINKED_PATIENTID


)

(SELECT  
    P.PERSON_ID AS USER_ID,
    P.CLINIC_ID AS CLINIC_ID,
    P.COUNTRY AS COUNTRY,
    P.CREATED_DATE AS CREATED_DATE,
    P.MODIFIED_DATE AS MODIFIED_DATE,
    P.STATUS AS STATUS,
    P.SOURCE AS SOURCE,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'TITLE' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS TITLE,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'LANGUAGE' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS LANGUAGE,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CATEGORY' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CATEGORY,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'IS_CLINIC_ADMIN' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS IS_CLINIC_ADMIN,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_READ_PII' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_READ_PII,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_MANAGE_PII' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_MANAGE_PII,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_READ_CLINICAL' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_READ_CLINICAL,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_MANAGE_CLINICAL' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_MANAGE_CLINICAL,
	MAX(CASE WHEN PERSON_DETAIL_LABEL = 'LINKED_PATIENTID' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS LINKED_PATIENTID
	
FROM "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."PERSON_DETAIL" PD 
INNER JOIN "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."PERSON" P ON PD.PERSON_ID=P.PERSON_ID WHERE P.SOURCE LIKE '%_USER'
GROUP BY P.PERSON_ID,CLINIC_ID,P.COUNTRY,P.CREATED_DATE,P.MODIFIED_DATE,P.STATUS,P.SOURCE
 
 
UNION ALL
 
 
SELECT  
    P.PERSON_ID AS PERSON_ID,
    P.CLINIC_ID AS CLINIC_ID,
    P.COUNTRY AS COUNTRY,
    P.CREATED_DATE AS CREATED_DATE,
    P.MODIFIED_DATE AS MODIFIED_DATE,
    P.STATUS AS STATUS,
    P.SOURCE AS SOURCE,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'TITLE' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS TITLE,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'LANGUAGE' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS LANGUAGE,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CATEGORY' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CATEGORY,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'IS_CLINIC_ADMIN' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS IS_CLINIC_ADMIN,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_READ_PII' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_READ_PII,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_MANAGE_PII' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_MANAGE_PII,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_READ_CLINICAL' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_READ_CLINICAL,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_MANAGE_CLINICAL' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_MANAGE_CLINICAL,
	MAX(CASE WHEN PERSON_DETAIL_LABEL = 'LINKED_PATIENTID' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS LINKED_PATIENTID
FROM "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."PERSON_DETAIL" PD 
INNER JOIN "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."PERSON" P ON PD.PERSON_ID=P.PERSON_ID WHERE P.SOURCE LIKE '%_USER'
GROUP BY P.PERSON_ID,CLINIC_ID,P.COUNTRY,P.CREATED_DATE,P.MODIFIED_DATE,P.STATUS,P.SOURCE


UNION ALL
 
 
SELECT  
    P.PERSON_ID AS PERSON_ID,
    P.CLINIC_ID AS CLINIC_ID,
    P.COUNTRY AS COUNTRY,
    P.CREATED_DATE AS CREATED_DATE,
    P.MODIFIED_DATE AS MODIFIED_DATE,
    P.STATUS AS STATUS,
    P.SOURCE AS SOURCE,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'TITLE' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS TITLE,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'LANGUAGE' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS LANGUAGE,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CATEGORY' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CATEGORY,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'IS_CLINIC_ADMIN' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS IS_CLINIC_ADMIN,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_READ_PII' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_READ_PII,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_MANAGE_PII' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_MANAGE_PII,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_READ_CLINICAL' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_READ_CLINICAL,
    MAX(CASE WHEN PERSON_DETAIL_LABEL = 'CAN_MANAGE_CLINICAL' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS CAN_MANAGE_CLINICAL,
	MAX(CASE WHEN PERSON_DETAIL_LABEL = 'LINKED_PATIENTID' THEN PERSON_DETAIL_VALUE ELSE NULL END) AS LINKED_PATIENTID
FROM "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."PERSON_DETAIL" PD 
INNER JOIN "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."PERSON" P ON PD.PERSON_ID=P.PERSON_ID WHERE P.SOURCE LIKE '%_USER'
GROUP BY P.PERSON_ID,CLINIC_ID,P.COUNTRY,P.CREATED_DATE,P.MODIFIED_DATE,P.STATUS,P.SOURCE)"""

cur.execute(insert_sql)


conn.commit()


cur.close()
conn.close()





#DWH_OBSERVATION#

import snowflake.connector
conn = snowflake.connector.connect(
    user='DF_RWD_DEV_PRJ_MDC_IICS_DEVELOPER',
    password='fo6AKi45VLq8kxxjyruKYq0',
    account='fg67397.eu-west-1',
    warehouse='DF_RWD_DEV_WH_PRJ_MDC',
    database='DF_RWD_DEV',
    schema='PRJ_MDC_DWH'
)


cur = conn.cursor()

delete_sql = """
DELETE FROM DWH_OBSERVATION
"""


cur.execute(delete_sql)

insert_sql = """INSERT INTO "DF_RWD_DEV"."PRJ_MDC_DWH"."DWH_OBSERVATION"

(

PERSON_ID,
OBSERVATION_ID,
ENGAGEMENT_ID,
OBSERVATION_DATE,
DOSEPLAN_ACTIVATION,
DOSEPLAN_ACTIVATION_UNIT,
HBA1C,
HBA1C_UNIT,
DOSE_SUGGESTION,
DOSE_SUGGESTION_UNIT,
WEIGHT,
WEIGHT_UNIT,
DOSE,
DOSE_UNIT,
FBGL,
FBGL_UNIT,
BGL,
BGL_UNIT,
GLUCOMETER_READING,
GLUCOMETER_READING_UNIT,
FASTING,
HYPO,
SUGGESTED_DOSE,
SUGGESTED_REASON,
STATUS,
SOURCE

)


(
SELECT DISTINCT
    O.PERSON_ID,
    O.OBSERVATION_ID,
    O.ENGAGEMENT_ID,
    O.OBSERVATION_DATE,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'doseplan_activation' THEN OD.OBSERVATION_DETAIL_VALUE END) AS DOSEPLAN_ACTIVATION,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'doseplan_activation' THEN OD.OBSERVATION_DETAIL_UNIT END) AS DOSEPLAN_ACTIVATION_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HbA1C' THEN OD.OBSERVATION_DETAIL_VALUE END) AS HBA1C,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HbA1C' THEN OD.OBSERVATION_DETAIL_UNIT END) AS HBA1C_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE_SUGGESTION' THEN OD.OBSERVATION_DETAIL_VALUE END) AS DOSE_SUGGESTION,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE_SUGGESTION' THEN OD.OBSERVATION_DETAIL_UNIT END) AS DOSE_SUGGESTION_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'WEIGHT' THEN OD.OBSERVATION_DETAIL_VALUE END) AS WEIGHT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'WEIGHT' THEN OD.OBSERVATION_DETAIL_UNIT END) AS WEIGHT_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE' THEN OD.OBSERVATION_DETAIL_VALUE END) AS DOSE,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE' THEN OD.OBSERVATION_DETAIL_UNIT END) AS DOSE_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FBGL' THEN OD.OBSERVATION_DETAIL_VALUE END) AS FBGL,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FBGL' THEN OD.OBSERVATION_DETAIL_UNIT END) AS FBGL_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'BGL' THEN OD.OBSERVATION_DETAIL_VALUE END) AS BGL,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'BGL' THEN OD.OBSERVATION_DETAIL_UNIT END) AS BGL_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'GLUCOMETER_READING' THEN OD.OBSERVATION_DETAIL_VALUE END) AS GLUCOMETER_READING,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'GLUCOMETER_READING' THEN OD.OBSERVATION_DETAIL_UNIT END) AS GLUCOMETER_READING_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FASTING' THEN OD.OBSERVATION_DETAIL_VALUE END) AS FASTING,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HYPO' THEN OD.OBSERVATION_DETAIL_VALUE END) AS HYPO,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_DOSE' THEN OD.OBSERVATION_DETAIL_VALUE END) AS SUGGESTED_DOSE,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_REASON' THEN OD.OBSERVATION_DETAIL_VALUE END) AS SUGGESTED_REASON,
	O.STATUS,
    O.SOURCE
FROM
    "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."OBSERVATION" O
JOIN
    "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."OBSERVATION_DETAIL" OD
    ON O.OBSERVATION_ID = OD.OBSERVATION_ID
    AND O.SOURCE = OD.SOURCE
WHERE
    O.SOURCE LIKE '%_OBS%'
    AND OD.OBSERVATION_DETAIL_VALUE IS NOT NULL
    AND (OD.OBSERVATION_DETAIL_LABEL IN (
        'doseplan_activation', 'HbA1C', 'DOSE_SUGGESTION', 'WEIGHT', 'DOSE',
        'FBGL', 'BGL', 'GLUCOMETER_READING', 'FASTING', 'HYPO',
        'SUGGESTED_DOSE', 'SUGGESTED_REASON')
    )
GROUP BY
    O.PERSON_ID,
    O.OBSERVATION_ID,
    O.ENGAGEMENT_ID,
    O.OBSERVATION_DATE,
    O.STATUS,
    O.SOURCE


UNION ALL


SELECT DISTINCT
    O.PERSON_ID,
    O.OBSERVATION_ID,
    O.ENGAGEMENT_ID,
    O.OBSERVATION_DATE,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'doseplan_activation' THEN OD.OBSERVATION_DETAIL_VALUE END) AS DOSEPLAN_ACTIVATION,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'doseplan_activation' THEN OD.OBSERVATION_DETAIL_UNIT END) AS DOSEPLAN_ACTIVATION_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HbA1C' THEN OD.OBSERVATION_DETAIL_VALUE END) AS HBA1C,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HbA1C' THEN OD.OBSERVATION_DETAIL_UNIT END) AS HBA1C_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE_SUGGESTION' THEN OD.OBSERVATION_DETAIL_VALUE END) AS DOSE_SUGGESTION,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE_SUGGESTION' THEN OD.OBSERVATION_DETAIL_UNIT END) AS DOSE_SUGGESTION_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'WEIGHT' THEN OD.OBSERVATION_DETAIL_VALUE END) AS WEIGHT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'WEIGHT' THEN OD.OBSERVATION_DETAIL_UNIT END) AS WEIGHT_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE' THEN OD.OBSERVATION_DETAIL_VALUE END) AS DOSE,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE' THEN OD.OBSERVATION_DETAIL_UNIT END) AS DOSE_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FBGL' THEN OD.OBSERVATION_DETAIL_VALUE END) AS FBGL,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FBGL' THEN OD.OBSERVATION_DETAIL_UNIT END) AS FBGL_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'BGL' THEN OD.OBSERVATION_DETAIL_VALUE END) AS BGL,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'BGL' THEN OD.OBSERVATION_DETAIL_UNIT END) AS BGL_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'GLUCOMETER_READING' THEN OD.OBSERVATION_DETAIL_VALUE END) AS GLUCOMETER_READING,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'GLUCOMETER_READING' THEN OD.OBSERVATION_DETAIL_UNIT END) AS GLUCOMETER_READING_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FASTING' THEN OD.OBSERVATION_DETAIL_VALUE END) AS FASTING,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HYPO' THEN OD.OBSERVATION_DETAIL_VALUE END) AS HYPO,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_DOSE' THEN OD.OBSERVATION_DETAIL_VALUE END) AS SUGGESTED_DOSE,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_REASON' THEN OD.OBSERVATION_DETAIL_VALUE END) AS SUGGESTED_REASON,
	O.STATUS,
    O.SOURCE
FROM
    "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."OBSERVATION" O
JOIN
    "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."OBSERVATION_DETAIL" OD
    ON O.OBSERVATION_ID = OD.OBSERVATION_ID
    AND O.SOURCE = OD.SOURCE
WHERE
    O.SOURCE LIKE '%_OBS%'
    AND OD.OBSERVATION_DETAIL_VALUE IS NOT NULL
    AND (OD.OBSERVATION_DETAIL_LABEL IN (
        'doseplan_activation', 'HbA1C', 'DOSE_SUGGESTION', 'WEIGHT', 'DOSE',
        'FBGL', 'BGL', 'GLUCOMETER_READING', 'FASTING', 'HYPO',
        'SUGGESTED_DOSE', 'SUGGESTED_REASON')
    )
GROUP BY
    O.PERSON_ID,
    O.OBSERVATION_ID,
    O.ENGAGEMENT_ID,
    O.OBSERVATION_DATE,
    O.STATUS,
    O.SOURCE


UNION ALL

SELECT DISTINCT
    O.PERSON_ID,
    O.OBSERVATION_ID,
    O.ENGAGEMENT_ID,
    O.OBSERVATION_DATE,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'doseplan_activation' THEN OD.OBSERVATION_DETAIL_VALUE END) AS DOSEPLAN_ACTIVATION,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'doseplan_activation' THEN OD.OBSERVATION_DETAIL_UNIT END) AS DOSEPLAN_ACTIVATION_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HbA1C' THEN OD.OBSERVATION_DETAIL_VALUE END) AS HBA1C,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HbA1C' THEN OD.OBSERVATION_DETAIL_UNIT END) AS HBA1C_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE_SUGGESTION' THEN OD.OBSERVATION_DETAIL_VALUE END) AS DOSE_SUGGESTION,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE_SUGGESTION' THEN OD.OBSERVATION_DETAIL_UNIT END) AS DOSE_SUGGESTION_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'WEIGHT' THEN OD.OBSERVATION_DETAIL_VALUE END) AS WEIGHT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'WEIGHT' THEN OD.OBSERVATION_DETAIL_UNIT END) AS WEIGHT_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE' THEN OD.OBSERVATION_DETAIL_VALUE END) AS DOSE,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'DOSE' THEN OD.OBSERVATION_DETAIL_UNIT END) AS DOSE_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FBGL' THEN OD.OBSERVATION_DETAIL_VALUE END) AS FBGL,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FBGL' THEN OD.OBSERVATION_DETAIL_UNIT END) AS FBGL_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'BGL' THEN OD.OBSERVATION_DETAIL_VALUE END) AS BGL,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'BGL' THEN OD.OBSERVATION_DETAIL_UNIT END) AS BGL_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'GLUCOMETER_READING' THEN OD.OBSERVATION_DETAIL_VALUE END) AS GLUCOMETER_READING,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'GLUCOMETER_READING' THEN OD.OBSERVATION_DETAIL_UNIT END) AS GLUCOMETER_READING_UNIT,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FASTING' THEN OD.OBSERVATION_DETAIL_VALUE END) AS FASTING,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HYPO' THEN OD.OBSERVATION_DETAIL_VALUE END) AS HYPO,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_DOSE' THEN OD.OBSERVATION_DETAIL_VALUE END) AS SUGGESTED_DOSE,
    MAX(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_REASON' THEN OD.OBSERVATION_DETAIL_VALUE END) AS SUGGESTED_REASON,
	O.STATUS,
    O.SOURCE
FROM
    "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."OBSERVATION" O
JOIN
    "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."OBSERVATION_DETAIL" OD
    ON O.OBSERVATION_ID = OD.OBSERVATION_ID
    AND O.SOURCE = OD.SOURCE
WHERE
    O.SOURCE LIKE '%_OBS%'
    AND OD.OBSERVATION_DETAIL_VALUE IS NOT NULL
    AND (OD.OBSERVATION_DETAIL_LABEL IN (
        'doseplan_activation', 'HbA1C', 'DOSE_SUGGESTION', 'WEIGHT', 'DOSE',
        'FBGL', 'BGL', 'GLUCOMETER_READING', 'FASTING', 'HYPO',
        'SUGGESTED_DOSE', 'SUGGESTED_REASON')

    )
GROUP BY
    O.PERSON_ID,
    O.OBSERVATION_ID,
    O.ENGAGEMENT_ID,
    O.OBSERVATION_DATE,
    O.STATUS,
    O.SOURCE
    )"""


cur.execute(insert_sql)

conn.commit()
cur.close()
conn.close()





#DWH_ENGAGEMENT#

import snowflake.connector
conn = snowflake.connector.connect(
    user='DF_RWD_DEV_PRJ_MDC_IICS_DEVELOPER',
    password='fo6AKi45VLq8kxxjyruKYq0',
    account='fg67397.eu-west-1',
    warehouse='DF_RWD_DEV_WH_PRJ_MDC',
    database='DF_RWD_DEV',
    schema='PRJ_MDC_DWH'
)


cur = conn.cursor()

delete_sql = """
DELETE FROM DWH_ENGAGEMENT
"""


cur.execute(delete_sql)

insert_sql = """INSERT INTO "DF_RWD_DEV"."PRJ_MDC_DWH"."DWH_ENGAGEMENT"
(

   	PERSON_ID ,
	ENGAGEMENT_ID ,
	USER_ID ,
	CREATED_DATE ,
	ACTIVATED_DATE ,
	DEACTIVATED_DATE ,
    MODIFIER_ID,
    MODIFIER_DATE,
    TRAINER_ID,
    TRAINING_DATE,
    DRUG_NAME,
    BGL_CALCULATION,
    DEACTIVATED_BY_USERID,
    EXPIRATION_DATE,	
    TITRATION_DAYS,	
    STARTING_DOSE,	
    MAXMIMUM_DOSE,	
    DAILY_DOSE_TIME,	
    DAILY_READING_TIME,	
    HYPO_BG_THRESHOLD,	
    HYPO_OPTIONS,
    TITRATION_PAIRS,
    MINBGVALUE1 ,
	DOSECHANGE1 ,
	CHANGEMETHOD1 ,
  	MINBGVALUE2 ,
	DOSECHANGE2 ,
	CHANGEMETHOD2 ,
    MINBGVALUE3 ,
	DOSECHANGE3 ,
	CHANGEMETHOD3 ,
   	MINBGVALUE4 ,
	DOSECHANGE4 ,
	CHANGEMETHOD4 ,
    MINBGVALUE5 ,
	DOSECHANGE5 ,
	CHANGEMETHOD5 ,
    MINBGVALUE6 ,
	DOSECHANGE6 ,
	CHANGEMETHOD6 ,
    MINBGVALUE7 ,
	DOSECHANGE7 ,
	CHANGEMETHOD7 ,
	PATIENT_ACTIVATION_METHOD ,
    CPSENTINSMS ,
    CPSENTINMAIL ,
    CPSENTINWHATAPP ,
    STATUS,
    REASON_ENDED,
	SOURCE 



)

(SELECT DISTINCT
E.PERSON_ID,
    E.ENGAGEMENT_ID,
    CREATOR_ID AS USER_ID,
    TO_DATE(CREATED_DATE) AS CREATED_DATE,
    TO_DATE(ACTIVATED_DATE) AS ACTIVATED_DATE,
    TO_DATE(DEACTIVATED_DATE) AS DEACTIVATED_DATE,
    MODIFIER_ID,
    MODIFIED_DATE,
    TRAINER_ID,
    TRAINING_DATE,
    DRUG_NAME,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'BGL_CALCULATION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS BGL_CALCULATION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DEACTIVATED_BY_USERID' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DEACTIVATED_BY_USERID,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'EXPIRATION_DATE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS EXPIRATIONDATE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'TITRATION_DAYS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS TITRATION_DAYS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'STARTING_DOSE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS STARTING_DOSE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MAXIMUM_DOSE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MAXIMUM_DOSE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DAILY_DOSE_TIME' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DAILY_DOSE_TIME,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DAILY_READING_TIME' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DAILY_READING_TIME,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_BG_THRESHOLD' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS HYPO_BG_THRESHOLD,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_OPTIONS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS HYPO_OPTIONS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'TITRATION_PAIRS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS TITRATION_PAIRS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD7,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'PATIENT_ACTIVATION_METHOD' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS PATIENT_ACTIVATION_METHOD,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CPSENTINSMS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CPSENTINSMS,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CPSENTINMAIL' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CPSENTINMAIL,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CPSENTINWHATAPP' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CPSENTINWHATAPP,
E.STATUS,
E.REASON_ENDED,
E.SOURCE

FROM
    "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."ENGAGEMENT" E
     JOIN "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."ENGAGEMENT_DETAIL" ED ON E.ENGAGEMENT_ID=ED.ENGAGEMENT_ID AND E.SOURCE=ED.SOURCE
     JOIN "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."MEDICATION" M ON M.ENGAGEMENT_ID=ED.ENGAGEMENT_ID AND M.SOURCE=ED.SOURCE
     AND E.SOURCE  LIKE '%_CARE%'



UNION ALL 


SELECT DISTINCT
E.PERSON_ID,
    E.ENGAGEMENT_ID,
    CREATOR_ID AS USER_ID,
    TO_DATE(CREATED_DATE) AS CREATED_DATE,
    TO_DATE(ACTIVATED_DATE) AS ACTIVATED_DATE,
    TO_DATE(DEACTIVATED_DATE) AS DEACTIVATED_DATE,
    MODIFIER_ID,
    MODIFIED_DATE,
    TRAINER_ID,
    TRAINING_DATE,
DRUG_NAME,
FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'BGL_CALCULATION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS BGL_CALCULATION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DEACTIVATED_BY_USERID' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DEACTIVATED_BY_USERID,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'EXPIRATION_DATE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS EXPIRATIONDATE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'TITRATION_DAYS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS TITRATION_DAYS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'STARTING_DOSE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS STARTING_DOSE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MAXIMUM_DOSE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MAXIMUM_DOSE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DAILY_DOSE_TIME' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DAILY_DOSE_TIME,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DAILY_READING_TIME' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DAILY_READING_TIME,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_BG_THRESHOLD' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS HYPO_BG_THRESHOLD,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_OPTIONS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS HYPO_OPTIONS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'TITRATION_PAIRS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS TITRATION_PAIRS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD7,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'PATIENT_ACTIVATION_METHOD' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS PATIENT_ACTIVATION_METHOD,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CPSENTINSMS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CPSENTINSMS,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CPSENTINMAIL' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CPSENTINMAIL,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CPSENTINWHATAPP' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CPSENTINWHATAPP,
E.STATUS,
E.REASON_ENDED,
E.SOURCE

FROM
    "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."ENGAGEMENT" E
     JOIN "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."ENGAGEMENT_DETAIL" ED ON E.ENGAGEMENT_ID=ED.ENGAGEMENT_ID AND E.SOURCE=ED.SOURCE
     JOIN "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."MEDICATION" M ON M.ENGAGEMENT_ID=ED.ENGAGEMENT_ID AND M.SOURCE=ED.SOURCE
     AND E.SOURCE  LIKE '%_CARE%'
	 
	 
	 
UNION ALL 



SELECT DISTINCT
E.PERSON_ID,
    E.ENGAGEMENT_ID,
    CREATOR_ID AS USER_ID,
    TO_DATE(CREATED_DATE) AS CREATED_DATE,
    TO_DATE(ACTIVATED_DATE) AS ACTIVATED_DATE,
    TO_DATE(DEACTIVATED_DATE) AS DEACTIVATED_DATE,
    MODIFIER_ID,
    MODIFIED_DATE,
    TRAINER_ID,
    TRAINING_DATE,
DRUG_NAME,
FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'BGL_CALCULATION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS BGL_CALCULATION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DEACTIVATED_BY_USERID' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DEACTIVATED_BY_USERID,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'EXPIRATION_DATE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS EXPIRATIONDATE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'TITRATION_DAYS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS TITRATION_DAYS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'STARTING_DOSE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS STARTING_DOSE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MAXIMUM_DOSE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MAXIMUM_DOSE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DAILY_DOSE_TIME' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DAILY_DOSE_TIME,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DAILY_READING_TIME' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DAILY_READING_TIME,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_BG_THRESHOLD' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS HYPO_BG_THRESHOLD,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_OPTIONS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS HYPO_OPTIONS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'TITRATION_PAIRS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS TITRATION_PAIRS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS MIN_BG_VALUE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS DOSE_CHANGE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CHANGE_METHOD7,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'PATIENT_ACTIVATION_METHOD' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS PATIENT_ACTIVATION_METHOD,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CPSENTINSMS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CPSENTINSMS,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CPSENTINMAIL' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CPSENTINMAIL,
	FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CPSENTINWHATAPP' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID, ED.ENGAGEMENT_ID, USER_ID ORDER BY CREATED_DATE, ACTIVATED_DATE, DEACTIVATED_DATE) AS CPSENTINWHATAPP,
E.STATUS,
E.REASON_ENDED,
E.SOURCE

FROM
    "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."ENGAGEMENT" E
     JOIN "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."ENGAGEMENT_DETAIL" ED ON E.ENGAGEMENT_ID=ED.ENGAGEMENT_ID AND E.SOURCE=ED.SOURCE
     JOIN "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."MEDICATION" M ON M.ENGAGEMENT_ID=ED.ENGAGEMENT_ID AND M.SOURCE=ED.SOURCE
     AND E.SOURCE  LIKE '%_CARE%')"""
     
cur.execute(insert_sql)


conn.commit()


cur.close()
conn.close()




#DWH_TAGGING#

import snowflake.connector
conn = snowflake.connector.connect(
    user='DF_RWD_DEV_PRJ_MDC_IICS_DEVELOPER',
    password='fo6AKi45VLq8kxxjyruKYq0',
    account='fg67397.eu-west-1',
    warehouse='DF_RWD_DEV_WH_PRJ_MDC',
    database='DF_RWD_DEV',
    schema='PRJ_MDC_DWH'
)


cur = conn.cursor()

delete_sql = """
DELETE FROM DWH_TAGGING
"""


cur.execute(delete_sql)

insert_sql = """INSERT INTO "DF_RWD_DEV"."PRJ_MDC_DWH"."DWH_TAGGING"

(

PERSON_ID,	
OBSERVATION_ID,	
OBSERVATION_DATE,	
USERID,
USER_CATEGORY,
TAG_EVENT_NAME,
OTHER


)

(SELECT DISTINCT
O.PERSON_ID,
O.OBSERVATION_ID,
O.OBSERVATION_DATE,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'USERID' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS USERID,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'USER_CATEGORY' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS USER_CATEGORY,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'TAG_EVENT_NAME' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS TAG_EVENT_NAME,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'OTHER' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS OTHER
FROM "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."OBSERVATION" O
INNER  JOIN "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."OBSERVATION_DETAIL" OD ON OD.OBSERVATION_ID=O.OBSERVATION_ID
WHERE OD.SOURCE LIKE '%_TAGGING' AND O.SOURCE LIKE '%_TAGGING' 
GROUP BY
O.PERSON_ID,
O.OBSERVATION_ID,
O.OBSERVATION_DATE
 
UNION ALL
 
 
SELECT DISTINCT
O.PERSON_ID,
O.OBSERVATION_ID,
O.OBSERVATION_DATE,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'USERID' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS USERID,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'USER_CATEGORY' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS USER_CATEGORY,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'TAG_EVENT_NAME' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS TAG_EVENT_NAME,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'OTHER' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS OTHER
FROM "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."OBSERVATION" O
INNER  JOIN "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."OBSERVATION_DETAIL" OD ON OD.OBSERVATION_ID=O.OBSERVATION_ID
WHERE OD.SOURCE LIKE '%_TAGGING' AND O.SOURCE LIKE '%_TAGGING' 
GROUP BY
O.PERSON_ID,
O.OBSERVATION_ID,
O.OBSERVATION_DATE



UNION ALL
 
 
SELECT DISTINCT
O.PERSON_ID,
O.OBSERVATION_ID,
O.OBSERVATION_DATE,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'USERID' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS USERID,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'USER_CATEGORY' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS USER_CATEGORY,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'TAG_EVENT_NAME' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS TAG_EVENT_NAME,
MAX(CASE WHEN OBSERVATION_DETAIL_LABEL = 'OTHER' THEN OBSERVATION_DETAIL_VALUE ELSE NULL END) AS OTHER
FROM "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."OBSERVATION" O
INNER  JOIN "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."OBSERVATION_DETAIL" OD ON OD.OBSERVATION_ID=O.OBSERVATION_ID
WHERE OD.SOURCE LIKE '%_TAGGING' AND O.SOURCE LIKE '%_TAGGING' 
GROUP BY
O.PERSON_ID,
O.OBSERVATION_ID,
O.OBSERVATION_DATE)"""

cur.execute(insert_sql)


conn.commit()


cur.close()
conn.close()
  



#DWH_USERACTIVITY#

import snowflake.connector
conn = snowflake.connector.connect(
    user='DF_RWD_DEV_PRJ_MDC_IICS_DEVELOPER',
    password='fo6AKi45VLq8kxxjyruKYq0',
    account='fg67397.eu-west-1',
    warehouse='DF_RWD_DEV_WH_PRJ_MDC',
    database='DF_RWD_DEV',
    schema='PRJ_MDC_DWH'
)


cur = conn.cursor()

delete_sql = """
DELETE FROM DWH_USERACTIVITY
"""


cur.execute(delete_sql)

insert_sql = """INSERT INTO "DF_RWD_DEV"."PRJ_MDC_DWH"."DWH_USERACTIVITY"
(PERSON_ID,
ACTIVITY_ID,
DATE,
USER_ID,
CATEGORY,
TIMESPENT,
UDI,
JAILBROKEN,
SYSTEMVERSION,
HARDWARENAME,
APPID,
APPVERSION,
DEVICE_OS,
CARRIER,
TOTALMEMORY,
FREEMEMORY,
ACCEPTLANGUAGE,
STATUS,
SOURCE)

(SELECT DISTINCT
O.PERSON_ID AS PERSON_ID,
O.OBSERVATION_ID AS ACTIVITY_ID,
O.OBSERVATION_DATE AS DATE,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'USERID' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS USERID,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'CATEGORY' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS CATEGORY,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'TIMESPENT' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS TIMESPENT,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'UDI' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS UDI,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'JAIL_BROKEN' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS JAILBROKEN,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'SYSTEM_VERSION' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS SYSTEMVERSION,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'HARDWARE_NAME' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS HARDWARENAME,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'APP_ID' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS APPID,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'APP_VERSION' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS APPVERSION,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'DEVICE_OS' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS DEVICE_OS,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'CARRIER' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS CARRIER,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'TOTAL_MEMORY' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS TOTALMEMORY,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'FREE_MEMORY' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS FREEMEMORY,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'ACCEPT_LANGUAGE' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS ACCEPTLANGUAGE,
O.STATUS,
O.SOURCE

FROM "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."OBSERVATION" O
JOIN "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."OBSERVATION_DETAIL" OD ON O.OBSERVATION_ID=OD.OBSERVATION_ID AND O.SOURCE=OD.SOURCE
WHERE O.SOURCE LIKE '%USERACT%'

UNION ALL

SELECT DISTINCT
O.PERSON_ID AS PERSON_ID,
O.OBSERVATION_ID AS ACTIVITY_ID,
O.OBSERVATION_DATE AS DATE,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'USERID' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS USERID,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'CATEGORY' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS CATEGORY,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'TIMESPENT' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS TIMESPENT,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'UDI' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS UDI,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'JAIL_BROKEN' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS JAILBROKEN,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'SYSTEM_VERSION' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS SYSTEMVERSION,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'HARDWARE_NAME' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS HARDWARENAME,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'APP_ID' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS APPID,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'APP_VERSION' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS APPVERSION,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'DEVICE_OS' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS DEVICE_OS,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'CARRIER' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS CARRIER,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'TOTAL_MEMORY' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS TOTALMEMORY,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'FREE_MEMORY' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS FREEMEMORY,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'ACCEPT_LANGUAGE' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS ACCEPTLANGUAGE,
O.STATUS,
O.SOURCE

FROM "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."OBSERVATION" O
JOIN "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."OBSERVATION_DETAIL" OD ON O.OBSERVATION_ID=OD.OBSERVATION_ID AND O.SOURCE=OD.SOURCE
WHERE O.SOURCE LIKE '%USERACT%'



UNION ALL

SELECT DISTINCT
O.PERSON_ID AS PERSON_ID,
O.OBSERVATION_ID AS ACTIVITY_ID,
O.OBSERVATION_DATE AS DATE,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'USERID' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS USERID,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'CATEGORY' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS CATEGORY,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'TIMESPENT' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS TIMESPENT,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'UDI' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS UDI,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'JAIL_BROKEN' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS JAILBROKEN,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'SYSTEM_VERSION' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS SYSTEMVERSION,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'HARDWARE_NAME' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS HARDWARENAME,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'APP_ID' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS APPID,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'APP_VERSION' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS APPVERSION,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'DEVICE_OS' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS DEVICE_OS,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'CARRIER' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS CARRIER,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'TOTAL_MEMORY' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS TOTALMEMORY,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'FREE_MEMORY' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS FREEMEMORY,
FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL= 'ACCEPT_LANGUAGE' THEN OD.OBSERVATION_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY O.OBSERVATION_ID ORDER BY O.OBSERVATION_ID,OBSERVATION_DATE) AS ACCEPTLANGUAGE,
O.STATUS,
O.SOURCE

FROM "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."OBSERVATION" O
JOIN "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."OBSERVATION_DETAIL" OD ON O.OBSERVATION_ID=OD.OBSERVATION_ID AND O.SOURCE=OD.SOURCE
WHERE O.SOURCE LIKE '%USERACT%')"""

cur.execute(insert_sql)


conn.commit()


cur.close()
conn.close()




#DWH_DEVICE_READINGS#

import snowflake.connector
conn = snowflake.connector.connect(
    user='DF_RWD_DEV_PRJ_MDC_IICS_DEVELOPER',
    password='fo6AKi45VLq8kxxjyruKYq0',
    account='fg67397.eu-west-1',
    warehouse='DF_RWD_DEV_WH_PRJ_MDC',
    database='DF_RWD_DEV',
    schema='PRJ_MDC_DWH'
)


cur = conn.cursor()

delete_sql = """
DELETE FROM DWH_DEVICE_READINGS
"""


cur.execute(delete_sql)

insert_sql = """INSERT INTO "DF_RWD_DEV"."PRJ_MDC_DWH"."DWH_DEVICE_READINGS"
(
    PATIENT_ID,
    OBSERVATION_ID,
    CAREPLAN_ID,
    RECORDED_DATE,
    VALUE,
    VALUE_UNIT,
    FASTING,
    HYPO,
    SUGGESTED_DOSE,
    SUGGESTED_REASON,
    STATUS,
    SOURCE
)

(SELECT DISTINCT
    O.PERSON_ID AS PATIENT_ID,
    O.OBSERVATION_ID,
    O.ENGAGEMENT_ID AS CAREPLAN_ID,
    O.OBSERVATION_DATE AS RECORDED_DATE,
    
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'CATEGORY' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS VALUE,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'CATEGORY' THEN OD.OBSERVATION_DETAIL_UNIT END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS VALUE_UNIT,
    
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FASTING' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS FASTING,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HYPO' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS HYPO,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_DOSE' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS SUGGESTED_DOSE,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_REASON' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS SUGGESTED_REASON,
    
    O.STATUS,
    O.SOURCE
FROM 
    "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."OBSERVATION" O
JOIN 
    "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."OBSERVATION_DETAIL" OD 
    ON O.OBSERVATION_ID = OD.OBSERVATION_ID 
    AND O.SOURCE = OD.SOURCE
WHERE 
    O.SOURCE LIKE '%DEVICEREAD%'


UNION ALL


SELECT DISTINCT
    O.PERSON_ID AS PATIENT_ID,
    O.OBSERVATION_ID,
    O.ENGAGEMENT_ID AS CAREPLAN_ID,
    O.OBSERVATION_DATE AS RECORDED_DATE,
    
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'CATEGORY' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS VALUE,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'CATEGORY' THEN OD.OBSERVATION_DETAIL_UNIT END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS VALUE_UNIT,
    
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FASTING' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS FASTING,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HYPO' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS HYPO,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_DOSE' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS SUGGESTED_DOSE,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_REASON' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS SUGGESTED_REASON,
    
    O.STATUS,
    O.SOURCE
FROM 
    "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."OBSERVATION" O
JOIN 
    "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."OBSERVATION_DETAIL" OD 
    ON O.OBSERVATION_ID = OD.OBSERVATION_ID 
    AND O.SOURCE = OD.SOURCE
WHERE 
    O.SOURCE LIKE '%DEVICEREAD%'
	
	
	
UNION ALL


SELECT DISTINCT
    O.PERSON_ID AS PATIENT_ID,
    O.OBSERVATION_ID,
    O.ENGAGEMENT_ID AS CAREPLAN_ID,
    O.OBSERVATION_DATE AS RECORDED_DATE,
    
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'CATEGORY' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS VALUE,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'CATEGORY' THEN OD.OBSERVATION_DETAIL_UNIT END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS VALUE_UNIT,
    
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'FASTING' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS FASTING,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'HYPO' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS HYPO,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_DOSE' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS SUGGESTED_DOSE,
    FIRST_VALUE(CASE WHEN OD.OBSERVATION_DETAIL_LABEL = 'SUGGESTED_REASON' THEN OD.OBSERVATION_DETAIL_VALUE END) 
        IGNORE NULLS OVER (PARTITION BY O.PERSON_ID, O.ENGAGEMENT_ID ORDER BY O.OBSERVATION_DATE) AS SUGGESTED_REASON,
    
    O.STATUS,
    O.SOURCE
FROM 
    "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."OBSERVATION" O
JOIN 
    "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."OBSERVATION_DETAIL" OD 
    ON O.OBSERVATION_ID = OD.OBSERVATION_ID 
    AND O.SOURCE = OD.SOURCE
WHERE 
    O.SOURCE LIKE '%DEVICEREAD%')"""

cur.execute(insert_sql)


conn.commit()


cur.close()
conn.close()  



#DWH_DOSEPLANTEMPLATE#

import snowflake.connector
conn = snowflake.connector.connect(
    user='DF_RWD_DEV_PRJ_MDC_IICS_DEVELOPER',
    password='fo6AKi45VLq8kxxjyruKYq0',
    account='fg67397.eu-west-1',
    warehouse='DF_RWD_DEV_WH_PRJ_MDC',
    database='DF_RWD_DEV',
    schema='PRJ_MDC_DWH'
)


cur = conn.cursor()


delete_sql = """
DELETE FROM DWH_DOSEPLANTEMPLATE
"""


cur.execute(delete_sql)

insert_sql = """INSERT INTO "DF_RWD_DEV"."PRJ_MDC_DWH"."DWH_DOSEPLANTEMPLATE"
(DOSEPLANTEMPLATE_ID,
	OWNER_ID,
	CREATED,
	MODIFIED,
	MEDICATIONFIRST_VALUE,
	BGL_CALCULATION,
	HYPO_OPTIONS,
	HYPO_BG_THRESHOLD,
	PATIENT_ADHERENCE,
	TITRATION_DAYS,
	DESCRIPTION,
	VERSION,
	COUNTRY_CODE,
	CATEGORY,
	NAME,
	MIN_BG_VALUE1,
	DOSE_CHANGE1,
	CHANGE_METHOD1,
	MIN_BG_VALUE2,
	DOSE_CHANGE2,
	CHANGE_METHOD2,
	MIN_BG_VALUE3,
	DOSE_CHANGE3,
	CHANGE_METHOD3,
	MIN_BG_VALUE4,
	DOSE_CHANGE4,
	CHANGE_METHOD4,
	MIN_BG_VALUE5,
	DOSE_CHANGE5,
	CHANGE_METHOD5,
	MIN_BG_VALUE6,
	DOSE_CHANGE6,
	CHANGE_METHOD6,
	MIN_BG_VALUE7,
	DOSE_CHANGE7,
	CHANGE_METHOD7,
	STATUS,
	SOURCE
)


(SELECT DISTINCT
    E.ENGAGEMENT_ID AS DOSEPLANTEMPLATE_ID,
    CREATOR_ID AS OWNER_ID,
    TO_DATE(CREATED_DATE) AS CREATED,
    TO_DATE(MODIFIED_DATE) AS MODIFIED,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MEDICATION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID ORDER BY E.CREATED_DATE, E.CREATOR_ID, E.MODIFIED_DATE) AS MEDICATIONFIRST_VALUE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'BGL_CALCULATION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS BGL_CALCULATION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_OPTIONS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS HYPO_OPTIONS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_BG_THRESHOLD' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS HYPO_BG_THRESHOLD,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'PATIENT_ADHERENCE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS PATIENT_ADHERENCE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'TITRATION_DAYS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS TITRATION_DAYS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DESCRIPTION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DESCRIPTION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'VERSION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS VERSION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'COUNTRY_CODE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS COUNTRY_CODE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CATEGORY' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CATEGORY,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'NAME' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS NAME,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD7,
    E.STATUS,
    E.SOURCE

FROM
    "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."ENGAGEMENT" E
     JOIN "DF_RWD_DEV"."RWD_MDC_FR_STD_PSA"."ENGAGEMENT_DETAIL" ED ON E.ENGAGEMENT_ID=ED.ENGAGEMENT_ID AND E.SOURCE=ED.SOURCE
     AND E.SOURCE  LIKE '%_DOSEPLAN%'



UNION ALL




SELECT DISTINCT
    E.ENGAGEMENT_ID AS DOSEPLANTEMPLATE_ID,
    CREATOR_ID AS OWNER_ID,
    TO_DATE(CREATED_DATE) AS CREATED,
    TO_DATE(MODIFIED_DATE) AS MODIFIED,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MEDICATION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID ORDER BY E.CREATED_DATE, E.CREATOR_ID, E.MODIFIED_DATE) AS MEDICATIONFIRST_VALUE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'BGL_CALCULATION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS BGL_CALCULATION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_OPTIONS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS HYPO_OPTIONS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_BG_THRESHOLD' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS HYPO_BG_THRESHOLD,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'PATIENT_ADHERENCE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS PATIENT_ADHERENCE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'TITRATION_DAYS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS TITRATION_DAYS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DESCRIPTION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DESCRIPTION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'VERSION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS VERSION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'COUNTRY_CODE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS COUNTRY_CODE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CATEGORY' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CATEGORY,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'NAME' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS NAME,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD7,
    E.STATUS,
    E.SOURCE

FROM
    "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."ENGAGEMENT" E
     JOIN "DF_RWD_DEV"."RWD_MDC_US_STD_PSA"."ENGAGEMENT_DETAIL" ED ON E.ENGAGEMENT_ID=ED.ENGAGEMENT_ID AND E.SOURCE=ED.SOURCE
     AND E.SOURCE  LIKE '%_DOSEPLAN%'



UNION ALL




SELECT DISTINCT
    E.ENGAGEMENT_ID AS DOSEPLANTEMPLATE_ID,
    CREATOR_ID AS OWNER_ID,
    TO_DATE(CREATED_DATE) AS CREATED,
    TO_DATE(MODIFIED_DATE) AS MODIFIED,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MEDICATION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID ORDER BY E.CREATED_DATE, E.CREATOR_ID, E.MODIFIED_DATE) AS MEDICATIONFIRST_VALUE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'BGL_CALCULATION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS BGL_CALCULATION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_OPTIONS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS HYPO_OPTIONS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'HYPO_BG_THRESHOLD' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS HYPO_BG_THRESHOLD,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'PATIENT_ADHERENCE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS PATIENT_ADHERENCE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'TITRATION_DAYS' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS TITRATION_DAYS,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DESCRIPTION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DESCRIPTION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'VERSION' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS VERSION,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'COUNTRY_CODE' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS COUNTRY_CODE,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CATEGORY' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CATEGORY,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'NAME' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS NAME,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD1' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD1,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD2' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD2,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD3' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD3,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD4' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD4,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD5' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD5,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD6' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD6,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'MIN_BG_VALUE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS MIN_BG_VALUE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'DOSE_CHANGE7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS DOSE_CHANGE7,
    FIRST_VALUE(CASE WHEN ED.ENGAGEMENT_DETAIL_LABEL = 'CHANGE_METHOD7' THEN ED.ENGAGEMENT_DETAIL_VALUE END) IGNORE NULLS OVER (PARTITION BY E.PERSON_ID  ORDER BY E.CREATED_DATE,  E.CREATOR_ID,E.MODIFIED_DATE) AS CHANGE_METHOD7,
    E.STATUS,
    E.SOURCE

FROM
    "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."ENGAGEMENT" E
     JOIN "DF_RWD_DEV"."RWD_MDC_SA_STD_PSA"."ENGAGEMENT_DETAIL" ED ON E.ENGAGEMENT_ID=ED.ENGAGEMENT_ID AND E.SOURCE=ED.SOURCE
     AND E.SOURCE  LIKE '%_DOSEPLAN%')"""


cur.execute(insert_sql)


conn.commit()


cur.close()
conn.close()
